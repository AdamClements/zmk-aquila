/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define TAPPING_TERM 210
#define QUICK_TAP    150

&mt {
	flavor = "balanced";
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};

#define COMBO(name, keypress, keypos) \
combo_##name {                        \
	timeout-ms = <30>;                \
	bindings = <keypress>;            \
	key-positions = <keypos>;         \
};
/* Combo key positions
 0  1  2  3  4         5  6  7  8  9
10 11 12 13 14        15 16 17 18 19
20 21 22 23 24        25 26 27 28 29
			30 31  32 33             */

/ {
	combos {
		compatible = "zmk,combos";
		COMBO(lprn,   &kp LS(NUMBER_9),     4 15)
		COMBO(rprn,   &kp LS(NUMBER_0),     5 16)

		COMBO(lbkt,   &kp MINUS,     0 1)
		COMBO(rbkt,   &kp EQUAL,     8 9)

		COMBO(lbrc,   &kp LS(MINUS),     2 3)
		COMBO(rbrc,   &kp LS(EQUAL),     6 7)

		//COMBO(vol_up, &kp C_VOL_UP,  9 19)
		//COMBO(vol_dn, &kp C_VOL_DN, 19 29)
	};
};

/ {
    behaviors {
        bhm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };

        moto: momentary_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOMENTARY_TO";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings =
                <&mo>,
                <&to>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
           &kp SINGLE_QUOTE        &kp COMMA         &kp DOT        &kp P    &kp Y                                 &kp F        &kp G         &kp C        &kp R                  &kp L  
   &mt LSHIFT A  &bhm LALT O  &bhm LCTRL E  &bhm LGUI U    &kp I    &kp TAB      &kp BACKSPACE   &kp D  &bhm RGUI H  &bhm RCTRL T  &bhm RALT N  &bhm RSHIFT S  
           &kp SEMICOLON        &kp Q         &kp J        &kp K    &kp X    &caps_word      &kp DEL        &kp B        &kp M     &kp W      &kp V               &kp Z  
                                                &mo 1   &kp RET                               &kp SPACE    &mo 2 
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            bindings = <
              &kp GRAVE        &trans    &kp EQUAL        &trans         &trans                          &trans     &kp MINUS        &kp EQUAL      &kp RBKT             &kp LBKT  
      &mt LSHIFT NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5    &trans  &trans   &kp NUMBER_6  &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9  &mt RIGHT_SHIFT N0  
                  &kp LS(SEMICOLON)        &trans        &trans        &trans  &kp BACKSLASH       &trans  &kp DEL    &kp SLASH   &kp KP_PLUS  &kp KP_ASTERISK  &kp KP_MINUS     &kp SINGLE_QUOTE  
                                                           &to 0         &trans                         &trans        &trans           
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        fn_layer {
            bindings = <
      &kp ESC  &kp K_PREV  &kp K_NEXT  &kp K_PLAY_PAUSE  &trans                    &trans      &trans       &trans    &trans  &kp BACKSPACE  
   &caps_word      &kp UP      &trans            &trans  &trans    &trans  &kp C_VOL_UP  &kp DEL  &kp INSERT  &kp PAGE_UP    &kp UP  &kp PAGE_DOWN  
     &kp LEFT    &kp DOWN   &kp RIGHT            &trans  &trans    &trans  &kp C_VOL_DN  &kp HOME     &kp END     &kp LEFT  &kp DOWN      &kp RIGHT  
                                                &trans  &trans                     &trans      &to 0       
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp PG_UP PG_DN>;
        };

        meh_layer {
            bindings = <
  &kp K_POWER  &trans  &trans  &trans  &trans                       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  
        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7    &kp F8        &kp F9       &kp F10       &kp F11       &kp F12  
    &caps_word  &trans  &trans  &trans  &trans    &trans  &trans    &trans        &trans        &trans        &trans        &trans  
                                &trans  &trans                      &trans        &trans        
            >;
        };
    };
};
